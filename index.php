<!doctype html>
<html lang="en-US">
<head>
<title>Web-Site</title>
<meta charset="utf-8">
<meta name="description" content="RPCS3 is a multi-platform open-source Sony PlayStation 3 emulator and debugger written in C++ for Windows, Linux, macOS and FreeBSD. The purpose of this project is to accurately emulate the PlayStation 3 in its entirety with the power of reverse engineering and community collaboration.">
<meta name="keywords" content="rpcs3, playstation, playstation 3, ps3, emulator, debugger, windows, linux, macos, freebsd, open source, nekotekina, kd11, home">
<meta name="google-site-verification" content="cO1o6sx54cvKxhbnYsABWtl4sYFj9uVKV0DxLKZkWv8"/>
<?php include 'lib/module/sys-meta.php';?>
<meta property="og:title" content="RPCS3 - The PlayStation 3 Emulator" />
<meta property="og:description" content="RPCS3 is a multi-platform open-source Sony PlayStation 3 emulator and debugger written in C++ for Windows, Linux, macOS and FreeBSD made possible with the power of reverse engineering." />
<meta property="og:image" content="https://rpcs3.net/img/meta/mobile/1200.png" />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:url" content="https://rpcs3.net" />
<meta property="og:locale" content="en_US"/>
<meta property="og:type" content="website" />
<meta property="og:site_name" content="RPCS3" />
<meta name="twitter:title" content="RPCS3 - The PlayStation 3 Emulator">
<meta name="twitter:description" content="RPCS3 is a multi-platform open-source Sony PlayStation 3 emulator and debugger written in C++ for Windows, Linux, macOS and FreeBSD made possible with the power of reverse engineering.">
<meta name="twitter:image" content="https://rpcs3.net/img/meta/mobile/1200.png">
<meta name="twitter:site" content="@rpcs3">
<meta name="twitter:creator" content="@rpcs3">
<meta name="twitter:card" content="summary_large_image">
<?php include 'lib/module/sys-css.php';?>
<?php include 'lib/module/sys-js.php';?>
<script data-cfasync="false" src='/lib/js/carousel.js?v=1'></script>

</head>
<body>
<img src="/img/graphics/landing/hero-main.png" width="1" height="1" alt="preload"/>
<img src="/img/videos/1.jpg" width="1" height="1" alt="Preload"/>
<img src="/img/videos/2.jpg" width="1" height="1" alt="Preload"/>
<img src="/img/videos/3.jpg" width="1" height="1" alt="Preload"/>
<?php include 'lib/module/sys-php.php';?>
<?php include 'lib/module/inc-video-popout.php'?>
<?php
	preloadVideo(
	'1',
	'gIcsUr7W00k',
	'1'
	);
	preloadVideo(
	'2',
	'60lq9pXzDic',
	'2'
	);
	preloadVideo(
	'3',
	'MXHfGzEDz-I',
	'3'
	);
?>
<div class="page-con-content landing-con-override">
	<div class="wavebar-con-container-master">
		<div class="wavebar-con-wrap">
			<div class="wavebar-svg-object">
			</div>
			<div class="wavebar-svg-object">
			</div>
		</div>
	</div>
	<div class='landing-ico-scrolldow'>
	</div>
	<div class="landing-con-main">
		<div id="object-particles">
		</div>
		<div class="content-con-backdrop darkmode-header">
		</div>
		<div class="content-con-outside">
			<div class="content-con-inside">
				<div class='landing-con-left content-expand '>
					<div class="landing-con-container scale-content-txt-1">
						<div class='landing-ico-logo'>
						</div>
						<div class='landing-tx1-heading'>
							<h1>Создай свой <br> Веб-сайт<br></h1>
						</div>
						<div class='landing-tx2-heading'>
							<p>
								 Быстро просто и бесплатно
							</p>
							<div class='landing-btn-container'>
								<div class="build-btn-button">
									<div class="build-ico-button">
										
									</div>
									
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class='landing-con-right content-remove '>
					<div class='landing-img-hero' style="background: url(/img/graphics/landing/hero-main.png) no-repeat center; background-size: contain;">
					</div>
				</div>
			</div>
		</div>
	</div>
	
	<div class="landing-con-video darkmode-feature">
		<div class="content-con-outside">
			
			<div class="content-con-inside">
				<div class="video-tx1-heading darkmode-txt">
					<h2>Введение</h2>
				</div>
				<div class="video-con-divider">
				</div>
				<?php include 'lib/module/inc-video-carousel.php';?>
			</div>
		</div>
	</div>
	<div class="landing-con-discord darkmode-discord">
		
		<div class="content-con-outside">
			<div class="content-con-inside">
				<div class="discord-con-container">
					
					<div class="discord-con-mantra">
					<div class="discord-wrp-mantra scale-content-txt1" style="position: absolute; margin-left: -50%; margin-top: -99px; top: 10%;">
							<div class="discord-tx1-mantra darkmode-txt">
								<h2>Что такое сайт ?</h2>
								<div class="landing-con-divider">
								</div>
							</div>
							<div class="discord-tx2-mantra darkmode-txt">
								<p>
								Сайт — одна или несколько логически связанных между собой веб-страниц; также место расположения контента сервера. Обычно сайт в Интернете представляет собой массив связанных данных, имеющий уникальный адрес и воспринимаемый пользователями как единое целое. Веб-сайты называются так, потому что доступ к ним происходит по протоколу HTTP.
Веб-сайт как система электронных документов (файлов данных и кода) может принадлежать частному лицу или организации и быть доступным в компьютерной сети под общим доменным именем и IP-адресом или локально на одном компьютере. В статье журнала «Хозяйство и право» также было высказано мнение, что каждый сайт имеет своё название, которое при этом не следует путать с доменным именем. С точки зрения авторского права сайт является составным произведением, соответственно название сайта подлежит охране наряду с названиями всех прочих произведений.
Все сайты в совокупности составляют Всемирную паутину, где коммуникация (паутина) объединяет сегменты информации мирового сообщества в единое целое — базу данных и коммуникации планетарного масштаба. Для прямого доступа клиентов к сайтам на серверах был специально разработан протокол HTTP.
								</p>
							</div>
							<a href="https://discord.me/rpcs3" target="_blank">
							
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		<svg class="discord-con-animate" preserveaspectratio="none" width="1920" height="100%" viewbox="0 0 1920 330">
		<path class="discord-svg-animate" fill="#fff" fill-opacity="0.1" d="M140.881198,194.260295 C257.600568,129.32862 342.939626,119.84993 418.009939,203.154617 C493.080251,286.459305 545.728689,70.9046172 636.439626,63.9593047 C727.150564,57.0139922 768.99822,139.670242 858.802907,119.431961 C948.607595,99.1936797 1071.91228,-32.9977266 1243.91228,7.75227342 C1415.91228,48.5022734 1404.10369,208.584305 1508.27166,178.709305 C1612.43963,148.834305 1633.73291,79.913472 1711.63588,98.8569055 C1776.28676,114.577866 1819.96778,221.391836 1889.37253,185.808108 C2017.32661,120.206212 2004.01952,336.769569 2004.01952,336.769569 L271.635881,337 L-149.063338,337 C-149.063338,337 -245.850307,175.637635 -58.0633382,228.867188 C33.8652851,254.92501 64.1722713,236.933925 140.881198,194.260295 Z"></path>
		</svg>
	</div>
	<div class="landing-con-adsense">
		<div class='adsense-tx1-description darkmode-txt'>
			<span>Структура сайта</span>
		</div>
		<div class="adsense-con-container darkmode-slimbar div-css-board-ad">
			<div class="adsense-con-frame">
				<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js">
						</script>
				<ins class="adsense-con-insert adsbygoogle" data-ad-client="ca-pub-9076246674760451" data-ad-slot="1835527222"></ins>
			</div>
		</div>
	</div>
	<div class="landing-con-contribute darkmode-github">
		<div class="github-img-backdrop">
		</div>
		<div class="content-con-outside">
			<div class="content-con-inside">
				<div class="github-con-container">
				<div class="github-con-logo">
                  <div class="github-img-logo">
                  </div>
                </div>
					<div class="github-con-mantra">
						<div class="github-wrp-mantra scale-content-txt-1 ">
							
							<div class="github-tx2-mantra darkmode-txt">
								<p>
								Один из основных этапов создания сайта — это разработка его структуры. Именно она определяет расположение и взаимосвязь всех элементов ресурса: разделов, подразделов, страниц.

Сайт с продуманной структурой удобен для пользователей, потому что на нем легко ориентироваться. Такой сайт легко развивать, так как в хорошо построенную структуру удобно добавлять новые элементы.



От структуры сайта зависит также, как он представлен в поисковой системе: насколько полно он проиндексирован, что отображается в сниппетах (это краткие описания страницы в результатах поиска), легко ли поисковая система и пользователи находят нужную информацию на сайте. Давайте разберемся, что важно учитывать при организации структуры сайта.

Прежде всего, структура сайта должна быть логичной. Необходимо выделить в ней основные разделы и подразделы, каждый документ должен относиться к своему разделу. Например, в интернет-магазине мебели стулья должны находиться в разделе «Стулья», а столы — в разделе «Столы». Когда у сайта понятная и логичная структура, посетителю проще попасть на нужную ему страницу.
								</p>
							</div>
							<a href="https://github.com/rpcs3" target="_blank">
							
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	
	<div class="landing-con-patreon darkmode-feature">
		
		<div class="content-con-outside">
			<div class="content-con-inside">
				<div class="patreon-con-container">
					
					<div class="patreon-con-mantra">
						<div class="patreon-wrp-mantra scale-content-txt- ">
						
							<div class="patreon-tx2-mantra darkmode-txt">
							<div class="discord-tx880-mantra darkmode-txt">
								<h2>Виды сайтов</h2>
								<div class="landing-con-divider">
								</div>
							</div>
								
								<p>
								<h2>Коммерческие сайты</h2>
Сайты коммерческой направленности служат для получения прибыли за счёт продажи товаров и услуг либо их рекламы. Они различаются по структуре, наполнению и другим параметрам. Визитки, лендинги, промо-сайты, портфолио и витрины относятся к простым сайтам с упрощенной структурой и простым набором функций. Интернет-магазины, сайты услуг, а также корпоративные сайты являются более продвинутыми веб-ресурсами с расширенными возможностями.
                               
Интернет-магазин представляет собой сайт со сложным функционалом, предназначенный для продажи товаров или услуг. Содержит иллюстрированный каталог с описанием продуктов, опцию выбора способа оплаты и корзину с товарами.
Главные задачи интернет-магазина – это показать весь ассортимент продукции и облегчить покупателю процедуру её приобретения. Чем проще оформить покупку, тем больше клиентов ресурс сможет при
                                <h2>Сайты услуг</h2>
Такие сайты содержат сведения о предоставляемых услугах – юридических, парикмахерских, репетиторских и т.д. Зачастую такие порталы имеют форму заказа, общие и региональные номера телефонов и другие контактные данные.
Типичный представитель сайта услуг – портал «Правовед».
Сайты услуг подходят для многих направлений бизнеса, в частности, для строительных и клининговых компаний, а также для аренды оборудования, доставки еды и др.
Сайт клининговой фирмы, предлагающей услуги по уборке помещений.

                              <h2>Корпоративный сайт</h2>
Корпоративный сайт – многофункциональный ресурс, назначением которого является предоставление сведений о компании, ее товарах или услугах. Информирует клиента о направлении бизнеса и преимуществах обращения именно в эту фирму, выделяет сильные стороны предлагаемой продукции.
От сайта-визитки отличается более сложным дизайном, расширенным информационным наполнением и наличием множества дополнительных опций и инструментов (калькуляторы, вспомогательные средства выбора продукта, коммуникационные сервисы и пр.). Обеспечивает обратную связь с клиентом и позволяет сотрудникам взаимодействовать между собой.
Такой веб-ресурс является лицом компании, потому должен быть иметь приятный и удобный интерфейс. Вся представленная на нем информация должна быть достоверной и регулярно обновляемой. Грамотно оформленный и наполненный полезными сведениями проект вызывает доверие пользователей и способствует увеличению числа продаж.
Корпоративный сайт можно совершенствовать до бесконечности и дополнять его новым функционалом. Крупный и качественный ресурс называют порталом.
Корпоративный сайт строительной компании, предлагающей товары и услуги для обустройства домов.
                                <h2>Сайт-визитка</h2>
Сайт-визитка отличается лаконичным дизайном, состоит из одной или нескольких страниц и содержит краткие сведения о своем владельце. Основные разделы, которые обычно присутствуют на нем: «О компании», «Продукция или услуги», «Прайс-лист» и «Контакты». Такие проекты обычно создаются быстро и с минимальными вложениями. Они подходят для компаний и частных лиц, желающих разместить в интернете информацию о себе и своих услугах. Сайты-визитки позволяют привлекать внимание целевой аудитории и способствуют развитию бизнеса.
К их недостаткам относится маленький объем информации и бедный функционал. К тому же такие сайты сложно продвигать в поисковых системах.
Сайт-визитка туристической компании «Нефертити».

<h2>Лендинг</h2>
Лендинг (landing page) – одностраничный ресурс, созданный для рекламы какого-либо продукта. Содержит качественные фото и ключевую информацию о товаре или услуге с описанием преимуществ и призывом оформить заказ. Его главной целью является вызвать у потенциального покупателя интерес к продукту и мотивировать его на совершение покупки. Вот пара примеров, как делать не нужно — 1 и 2.
Одностраничник быстро загружается, обладает удобным интерфейсом и позволяет быстро воспользоваться предложением.
Узкая направленность сайта является его главным преимуществом, но и недостатком одновременно. Это обеспечивает высокую конверсию (привлекает пользователей, заинтересованных в предложенном товаре/услуге), но также накладывает ограничение на ассортимент. При появлении нового товара или услуги потребуется создание второго лендинга либо переформатирование самого ресурса. Многие бизнесмены, владеющие интернет-магазинами, создают лендинги для ходовых продуктов, используют их в качестве вспомогательных бизнес-инструментов, позволяющих получать дополнительный доход.
Лендинг для оформления кредита
<h2>Портфолио</h2>                             
Портфолио-галерея представляет собой презентацию работ компании или специалиста и создаётся, чтобы показать опыт и мастерство. Часто используется фотографами, дизайнерами, веб-мастерами и художниками для наглядного представления своих работ онлайн. Такие сайты отличаются нестандартным дизайном, который привлекает внимание и помогает находить новых клиентов. Для оформления обычных сайтов такой дизайн обычно не подходит, но для эффектной презентации является оптимальным вариантом. Портфолио служит самостоятельным средством раскрутки и позволяет работать, не отдавая посредникам и биржам часть своего дохода.

								
                            <div class="discord-tx880-mantra darkmode-txt">
								<h2>Популярные языки<br> для создания сайтов</h2>
								<div class="landing-con-divider">
								</div>
							</div>
							<p>
							JavaScript
Один из самых распространенных языков. Часто начинающие программисты путают Java и JavaScript. Несмотря на созвучное название, это два совершенно разных языка. Область его применения обширна и практически безгранична. На JavaScript пишут серверные, мобильные и компьютерные приложения. Любой браузер и любая операционная система хорошо знакома с JavaScript. Все сценарии выполняются непосредственно в браузере устройства, пользователю не нужно предпринимать каких-либо действий. В большинстве случаев он используется для создания простых анимаций, скриптов и объектов пользовательского интерфейса.

PHP
Главное преимущество PHP – код языка не конфликтует с HTML версткой и может использоваться одновременно для разметки внешнего вида страницы с помощью HTML-тегов и функционала страницы php-частью. Он легок в освоении практически на всех этапах изучения. Отличается развитой поддержкой данных, подходит под аппаратные платформы и известные ОС. Этот язык программирования предназначен специально для работы на стороне сервера. Библиотека языка подходит для задач, выполняемых многократно во время разработки сайта.


Python
Этот язык многие специалисты считают идеальным в DataScience (методика анализа данных с использованием машинного обучения и искусственного интеллекта). Одним из главных плюсов Python считается его простота. При наличии желания, с его особенностями и тонкостями программирования сможет разобраться каждый желающий. К тому же Python способствует экономии времени программиста, так как предлагает большое число специальных библиотек с уже готовыми программными конструкциями.


Можно отметить и недостатки:

У программиста появляется привычка к простоте. Работая с Python, специалист начинает искать такую же лаконичность в других языках, но не находит.
Низкая скорость. Это интерпретируемый язык, что означает выполнение кода построчно, это приводит к потере времени. Впрочем, во многих проектах подобная особенность Python не приносит дискомфорт и не является критичной, так как разница не заметна глазу пользователя. Но уже это нельзя сказать в отношении крупных проектов с огромной базой данных. Разница будет ощутимая.
Динамическая типизация. Программист может писать кратко, не объявлять тип переменной. Время экономится, но часто это приводит к появлению ошибок. Поэтому часто приходится делать дополнительные проверки.
Многие специалисты используют Python из-за его гибкости. Легко работает на серверах под управлением Linux и Windows.

Ruby
Основное назначение Ruby – формировать и программировать сайты, а также мобильные приложения. Вокруг языка Ruby сложилось мнение о его медлительности и невозможности масштабировать крупные проекты. В самом начале существования в плане производительности Ruby действительно уступал PHP и Python. Однако многочисленные обновления языка в корне исправили ситуацию, грядущие апгрейды должны принести и другие изменения – возможность работы с параллельными потоками. Медлительность работы современного приложения на Ruby целиком зависит от способностей программиста и правильности построения архитектуры. Из достоинств можно отметить легкость изучения языка начинающим специалистом, часто его используют благодаря простым методам записи.

С#
Язык программирования C# перенял многое от Java и C++. Больше половины его синтаксических возможностей идентичны с языком Java. Изначально использовался как средство разработки веб-сайтов. Отметим, что сегодня C# активно развивается, выходят обновления и дополнения, появились асинхронные методы, динамические связывания. Если сравнивать его с другими популярными языками, то можно отметить относительную молодость C#: его первая версия появилась в 2002 году.

Perl
Языки программирования для веб-разработки сложно представить без Perl. В самых истоках возникновения, Perl предназначался для избавления от необходимости написания различных программ и сценариев на разных языках, объединяя возможности системного администрирования и обработки документов в единую языковую среду. На текущий момент - Perl активно используется при написании интерактивных приложений, администрировании серверов и адаптирован ко всем популярным платформам - Windows, Mac и прочие.


Легко выделить основные преимущества Perl:

наличие множества готовых библиотек;
простота обработки большого объема данных;
кросс-платформенность;
поддержка работы с регулярными выражениями;
свободный синтаксис.
Но из преимуществ образуются небольшие недостатки. Наличие большого числа библиотек затрудняют поиск одного конкретного модуля, нужного программисту, что может тормозить процесс работы.

Java
Язык, зачастую используемый в целях создания мобильных приложений, сетевых программ. Считается основным языком разработки для Android. Язык идет в ногу со временем и сегодня актуален как никогда. Он включает объектно-ориентированное программирование (ООП) - методику упрощения сложного кода, при котором участок кода с конфликтующими друг с другом функциями делится на независимые объекты, каждый из которых содержит в себе те же функции и данные, которые активируются при непосредственном обращении к ним, а не одновременно, создавая конфликт (как при процедурном программировании). К прочим достоинствам Java стоит отнести безопасность, надежность и простой синтаксис.

SQL
Язык SQL это основа многих СУБД (система управления базами данных), он отвечает за структурирование, запись и чтение данных с диска. Считается важной частью программирования. Используется не только программистами, но и админами БД. Это первый и пока что основной язык для работы с БД, получивший повсеместное распространение.

Но SQL отличается и некоторыми недостатками. В первую очередь это сложность. Язык задумывался как средство работы конечного пользователя, но стал настолько непростым, что превратился в инструмент, используемый сегодня разве что программистами. Специалист обязательно должен знать SQL если в веб-разработке используется любая из базы данных – MySQL, Oracle. Умение работать с SQL обычно отличает профессионала от дилетанта.
                            <div class="discord-tx880-mantra darkmode-txt">
								<h2>Размещение сайта<br>в интернете</h2>
								<div class="landing-con-divider">
								</div>
							</div>
							<p>
							<p>Зарегистрируйте домен</p>
Домен — это имя сайта в сети. Слова «домен» и «сайт» часто употребляют как синонимы, хотя это разные понятия. Сайт — это веб-страницы, которые отображаются в Интернете. Домен — это уникальный «адрес» сайта в сети. Если у сайта не будет домена, пользователи не найдут к нему путь и не увидят содержимое.
Чтобы выбрать домен, нужно определиться с доменной зоной и придумать доменное имя. Подбор домена и зоны зависит от целей и направленности сайта. В REG.RU можно выбрать домен в более чем 750 доменных зонах: международных, национальных и тематических. Определиться с выбором помогут инструкции: Как выбрать домен? и Как придумать доменное имя для сайта?
После выбора домена его нужно зарегистрировать. На странице заказа вы указываете контактные данные и выбираете срок регистрации домена — он зависит от доменной зоны. Например, для доменов .RU, .SU и .РФ максимальный срок регистрации — один год. А в международных зонах домен можно зарегистрировать на год, пять или десять лет.
Таким образом, зарегистрировать домен — значит арендовать его на определенный срок. Арендуя домен, вы становитесь его администратором. По истечении срока регистрации домен нужно будет продлить.
После регистрации ваш домен будет отображаться в Личном кабинете REG.RU. Через Личный кабинет вы сможете управлять доменом и менять его настройки.
Если вы зарегистрировали домен, переходите к выбору и заказу хостинга.
<p>Закажите хостинг</p>
Хостинг — это площадка для размещения файлов сайта. Файлы размещаются на специальных компьютерах — серверах. Серверы постоянно находятся в сети и подключены к бесперебойному электропитанию. Благодаря этому размещенные на них сайты доступны круглосуточно. Таким образом, хостинг — это аренда места и мощностей.
В REG.RU вы можете заказать хостинг под свой проект: виртуальный хостинг, VPS или Dedicated. Самый популярный и простой в работе — виртуальный хостинг. На таком хостинге можно разместить любой сайт: от простого сайта-визитки до интернет-магазина.
При заказе виртуального хостинга вы выбираете:
•	тариф: выбор зависит от количества сайтов, которые можно добавить в рамках одной услуги (от 1 до 70). Определиться с выбором поможет статья: Советы по выбору тарифа хостинга.
•	срок заказа (от 1 месяца). Чем больше срок заказа, тем ниже цена за месяц.
•	панель управления хостингом: ISPmanager, Plesk или cPanel. Через панель можно управлять настройками хостинга и размещёнными на нём сайтами. Как выбрать панель управления хостингом?


После заказа хостинга нужно связать домен и хостинг между собой.
<p>Привяжите домен к хостингу</p>
Привязать домен к хостингу — значит прописать для домена DNS-серверы. DNS-серверы устанавливают связь между именем сайта и IP-адресом сервера, на котором размещен этот сайт.
Домены состоят из букв и символов. Но «машины» понимают только язык цифр. При вводе доменного имени в поисковую строку DNS-серверы преобразуют его в IP-адрес. Затем по IP они находят нужный сервер, а на нём — искомый сайт, и отправляют эту информацию браузеру. Благодаря DNS-серверам в поисковиках отображается нужный сайт и пользователи посещают его.
Чтобы привязать домен к хостингу, нужно прописать хостинговые DNS-серверы (ns1.hosting.reg.ru, ns2.hosting.reg.ru) автоматически или вручную Как завести сайт в интернете
Если вы прописали DNS-серверы для домена, приступайте к размещению сайта в Интернете.
<p>Разместите сайт на хостинге</p>
Есть несколько вариантов, как можно разместить свой сайт на хостинге. Например, это можно сделать через SSH и по FTP. Однако самый простой путь — размещение сайта через панель управления хостингом.
Чтобы разместить сайт через панель управления, нужно загрузить архив с файлами сайта в корневой каталог и импортировать базу данных (если она есть). В зависимости от выбранной панели это можно сделать по одной из инструкций: Как разместить сайт в ISPmanager?, Как разместить сайт в Plesk? или Как разместить сайт в cPanel?
После размещения архива с файлами сайт может быть доступен не сразу. Если ранее вы прописали или сменили DNS-серверы, дождитесь их обновления в течение 24 часов. DNS-серверы обновятся и сайт появится в Интернете.


</p>
</div>
							<a href="https://www.patreon.com/Nekotekina" target="_blank">
							
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	
</body>
</html>
